<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="loc_Icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>